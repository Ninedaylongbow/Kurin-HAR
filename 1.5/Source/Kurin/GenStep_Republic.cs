using RimWorld.BaseGen;
using System;
using System.Collections.Generic;
using System.Linq;
using RimWorld;
using Verse;
using Verse.AI.Group;

namespace Kurin
{
    public class GenStep_Republic : GenStep_Scatterer
    {
        private bool clearBuildingFaction;
        private static List<IntVec3> tmpCandidates = new List<IntVec3>();
        private static readonly FloatRange DefaultPawnsPoints = new FloatRange(1150f, 1600f);

        public override int SeedPart => 1806208471;
        protected override bool CanScatterAt(IntVec3 c, Map map)
        {
            return new CellRect(c.x - 54 / 2, c.z - 48 / 2, 54, 48).FullyContainedWithin(new CellRect(0, 0, map.Size.x, map.Size.z));
}
        protected override void ScatterAt(IntVec3 c, Map map, GenStepParams parms, int stackCount = 1)
        {
            Faction faction = ((map.ParentFaction != null && map.ParentFaction != Faction.OfPlayer) ? map.ParentFaction : Find.FactionManager.RandomEnemyFaction());
            CellRect rect = new CellRect(c.x - 54 / 2, c.z - 48 / 2, 54, 48);
            foreach (IntVec3 cell in rect)
                                 {
                                    List<Thing> things = cell.GetThingList(map);
                                    for (int i = things.Count - 1; i >= 0; i--)
                                    {
                                        things[i].Destroy();
                                    }
                                    Building building = cell.GetFirstBuilding(map);
                                    if (building != null)
                                        building.Destroy();
                                    // 清除屋顶
                                    if (cell.Roofed(map))
                                        map.roofGrid.SetRoof(cell, null);
                                 }

                        map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileMarble"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "PavedTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+43,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+44,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+45,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+46,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+47,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+48,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+49,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "CarpetYellowPastel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+50,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+51,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+52,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+53,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            Thing thing = null;
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+14),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "OrnateDoor"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+24),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "OrnateDoor"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+24),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+32),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+1,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+1,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Turret_MiniTurret"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+27),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Turret_MiniTurret"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+32),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+19),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+28),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+22),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+22),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+26),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+26),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+29),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+29),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+22),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+22),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+26),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+26),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+29),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+29),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+22),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+22),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+26),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+26),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+29),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+29),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+32),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+22),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+25),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+1),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+2),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+3),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+4),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+28),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+38),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+40),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+42),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+43),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+45),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Turret_MiniTurret"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+1),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Turret_MiniTurret"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+14),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+28),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+32),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "TableButcher"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+17),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "TableButcher"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+17),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "DiningChair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+18),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "DiningChair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "EndTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+26),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "EndTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "TableButcher"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+17),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "StandingLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+4),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "FloodLight"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "FloodLight"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+40),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+42),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "DiningChair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+23),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+26),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "EndTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "EndTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+32),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "DiningChair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "EndTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+26),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "EndTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+4),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Turret_MiniTurret"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Turret_MiniTurret"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+40),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+42),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "TableButcher"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+17),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "StandingLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "TableButcher"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+17),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "DiningChair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+18),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "DiningChair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "EndTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+26),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "EndTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "TableButcher"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+17),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+14),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+28),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+32),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "OrnateDoor"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+4),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+40),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+42),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "OrnateDoor"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "OrnateDoor"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+4),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+40),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+42),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "OrnateDoor"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+14),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+28),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+32),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+18),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+18),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+17),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+17),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+17),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+20),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+20),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+4),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Turret_MiniTurret"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+18),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+18),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Turret_MiniTurret"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+40),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+42),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+17),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+17),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+17),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+20),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+20),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+23),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+26),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+18),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+18),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+32),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+17),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+4),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "FloodLight"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+17),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+17),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+20),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+20),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "FloodLight"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+40),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+42),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+18),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+18),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+17),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+17),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+17),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+20),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+20),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Battery"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+14),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+28),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+32),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "SolarGenerator"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+43,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Turret_MiniTurret"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+43,0,rect.minZ+1),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+43,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+43,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+43,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+43,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Turret_MiniTurret"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+43,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+43,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+0),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+1),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+2),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+3),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+4),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+5),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+28),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+38),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+40),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+42),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+43),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+45),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+44,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+45,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+45,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+45,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+45,0,rect.minZ+20),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Armchair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+45,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Armchair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+45,0,rect.minZ+22),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Armchair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+45,0,rect.minZ+23),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Armchair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+45,0,rect.minZ+24),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Armchair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+45,0,rect.minZ+25),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Armchair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+45,0,rect.minZ+26),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+45,0,rect.minZ+27),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+45,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+45,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+45,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+46,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+46,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+46,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+46,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+46,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Armchair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+46,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Armchair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+46,0,rect.minZ+22),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Armchair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+46,0,rect.minZ+23),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Armchair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+46,0,rect.minZ+24),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Armchair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+46,0,rect.minZ+25),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Armchair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+46,0,rect.minZ+26),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+46,0,rect.minZ+29),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+46,0,rect.minZ+29),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+46,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+46,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+46,0,rect.minZ+32),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+46,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "PokerTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "PokerTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+48,0,rect.minZ+20),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Armchair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Armchair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+22),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Armchair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+23),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Armchair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+24),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Armchair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+25),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Armchair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+26),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "PokerTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "PokerTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+48,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+48,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+48,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+48,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "PokerTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "PokerTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+48,0,rect.minZ+20),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "PokerTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "PokerTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+47,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+48,0,rect.minZ+30),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+48,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+48,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+48,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+49,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+49,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+49,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+49,0,rect.minZ+18),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+49,0,rect.minZ+18),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+49,0,rect.minZ+20),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "FlatscreenTelevision"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+49,0,rect.minZ+23),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "FlatscreenTelevision"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+49,0,rect.minZ+23),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+49,0,rect.minZ+27),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+49,0,rect.minZ+28),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Couch"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cloth"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+49,0,rect.minZ+28),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+49,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+49,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+49,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+50,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+51,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Turret_MiniTurret"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+51,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+51,0,rect.minZ+25),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Turret_MiniTurret"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+51,0,rect.minZ+32),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+51,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+52,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+52,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+14),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "OrnateDoor"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+24),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "OrnateDoor"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+24),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+32),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BlocksMarble"));
            thing.SetFaction(faction);
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+53,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);

            ResolveParams rp = default(ResolveParams);
            rp.rect = rect;
            rp.faction = faction;
            Lord singlePawnLord = (rp.settlementLord = rp.singlePawnLord ?? LordMaker.MakeNewLord(faction, new LordJob_DefendBase(faction, rp.rect.CenterCell, rp.attackWhenPlayerBecameEnemy ?? false), map));
            TraverseParms traverseParms = TraverseParms.For(TraverseMode.PassDoors);
            ResolveParams resolveParams2 = rp;
            resolveParams2.rect = rp.rect;
            resolveParams2.faction = faction;
            resolveParams2.singlePawnLord = singlePawnLord;
            resolveParams2.pawnGroupKindDef = rp.pawnGroupKindDef ?? PawnGroupKindDefOf.Settlement;
            resolveParams2.singlePawnSpawnCellExtraPredicate = rp.singlePawnSpawnCellExtraPredicate ?? ((Predicate<IntVec3>)((IntVec3 x) => map.reachability.CanReachMapEdge(x, traverseParms)));
            if (resolveParams2.pawnGroupMakerParams == null)
            {
                resolveParams2.pawnGroupMakerParams = new PawnGroupMakerParms();
                resolveParams2.pawnGroupMakerParams.tile = map.Tile;
                resolveParams2.pawnGroupMakerParams.faction = faction;
                resolveParams2.pawnGroupMakerParams.points = rp.settlementPawnGroupPoints ?? DefaultPawnsPoints.RandomInRange;
                resolveParams2.pawnGroupMakerParams.inhabitants = true;
                resolveParams2.pawnGroupMakerParams.seed = rp.settlementPawnGroupSeed;
            }

            rp.bedCount = PawnGroupMakerUtility.GeneratePawnKindsExample(SymbolResolver_PawnGroup.GetGroupMakerParms(map, resolveParams2)).Count();
            BaseGen.symbolStack.Push("pawnGroup", resolveParams2);
        }
    }
}